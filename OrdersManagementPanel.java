
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import java.math.BigDecimal;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author bellarao
 */
public class OrdersManagementPanel extends javax.swing.JPanel {
private MainFrame mainFrame;
private DefaultTableModel currentModel;
    /**
     * Creates new form OrdersManagement
     */
    public OrdersManagementPanel(MainFrame mainFrame) {
        initComponents();
        populateOrderTable(); 
    }
    
    public void populateOrderTable(){
        currentModel = DatabaseConnector.getOrderData();
        orderViewTable.setModel(currentModel);
        orderViewTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
//        orderViewTable.getSelectionModel().addListSelectionListener(e -> updateTextFieldsWithSelectedOrder());
    }
    
//    private void updateTextFieldsWithSelectedOrder() {
//        int selectedRow = orderViewTable.getSelectedRow();
//        if (selectedRow != -1) {
//            for (int i = 0; i < orderViewTable.getColumnCount(); i++) {
//                Object value = orderViewTable.getValueAt(selectedRow, i);
//                orderTextFields[i].setText(value != null ? value.toString() : "");
//            }
//        }
//    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderViewTable = new javax.swing.JTable();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 255, 255));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("Order Management");

        orderViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "OID", "CustomerID", "OrderDate", "Status", "PaymentMethod", "ShippingAddress", "BillingAddress", "TotoalAmount", "Notes"
            }
        ));
        jScrollPane1.setViewportView(orderViewTable);

        updateButton.setBackground(new java.awt.Color(153, 153, 153));
        updateButton.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(269, 269, 269))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(347, 347, 347)
                .addComponent(updateButton)
                .addGap(51, 51, 51)
                .addComponent(deleteButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(deleteButton))
                .addGap(122, 122, 122))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int selectedRow = orderViewTable.getSelectedRow();
        if (selectedRow >= 0) {
            try {
                int orderId = (int)orderViewTable.getModel().getValueAt(selectedRow, 0); // OID
                String customerId = (String)orderViewTable.getModel().getValueAt(selectedRow, 1);
                String orderDate = (String)orderViewTable.getModel().getValueAt(selectedRow, 2);
                String status = (String)orderViewTable.getModel().getValueAt(selectedRow, 3);
                                System.out.println("For debug purpose: " + status);
                String totalAmountString = (String)orderViewTable.getModel().getValueAt(selectedRow, 4);
                BigDecimal totalAmount = new BigDecimal(totalAmountString);
                String paymentMethod = (String)orderViewTable.getModel().getValueAt(selectedRow, 5);
                String shippingAddress = (String)orderViewTable.getModel().getValueAt(selectedRow, 6);
                String billingAddress = (String)orderViewTable.getModel().getValueAt(selectedRow, 7);
                String notes = (String)orderViewTable.getModel().getValueAt(selectedRow, 8);

                if (DatabaseConnector.updateOrder(orderId, customerId, orderDate, status, totalAmountString, paymentMethod, shippingAddress, billingAddress, notes)) {
                    populateOrderTable(); 
                    JOptionPane.showMessageDialog(this, "Order updated successfully.");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to update order.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Invalid data format.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select an order to update.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int selectedRow = orderViewTable.getSelectedRow();
        if (selectedRow >= 0) {
            int orderId = (Integer) orderViewTable.getValueAt(selectedRow, 0);
            if (DatabaseConnector.deleteOrder(orderId)) {
                populateOrderTable(); 
                JOptionPane.showMessageDialog(this, "Order deleted successfully.");
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete order.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select an order to delete.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderViewTable;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}

